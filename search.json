[
  {
    "objectID": "projectproposal.html#dataset-proposal",
    "href": "projectproposal.html#dataset-proposal",
    "title": "Project Proposal",
    "section": "Dataset Proposal",
    "text": "Dataset Proposal\nMy project will study the a large dataset containing various statistics and salaries for every NBA player on a roster for the 2022-23 season. This will allow me to examine which statisitics are most valued by NBA front offices when deciding how much money they offer a given player, as well as the most important statistics, both basic and advanced, when deciding to give a player a “max” contract. With advanced statistics and analytics consistenly becoming more important in league circles, this will allow me to examine if advanced statistics that go beyond the naked eye have become more valued if front offices. I can also see which stats are most strongly correlated with higher salaries, as well as winning the most games. This will also allow me to see which basic stats are most strongly correlated to certain adavanced stats and vice versa. I plan to utilize a wide range of ggplot methods to examine these results such as correlation heat maps, bar graphs, and basic plots."
  },
  {
    "objectID": "projectproposal.html#looking-at-the-dataset",
    "href": "projectproposal.html#looking-at-the-dataset",
    "title": "Project Proposal",
    "section": "Looking at the dataset",
    "text": "Looking at the dataset\nBelow, I have provided code to load and then examine the first 20 frames of the dataset I plan to use for my project:\n\nfinal_project_dataset&lt;-read.csv(\"nba_2022-23_stats_salary.csv\")\nhead(final_project_dataset, n=20)\n\n    X           Player.Name   Salary Position Age    Team GP GS   MP   FG  FGA\n1   0         Stephen Curry 48070014       PG  34     GSW 56 56 34.7 10.0 20.2\n2   1             John Wall 47345760       PG  32     LAC 34  3 22.2  4.1  9.9\n3   2     Russell Westbrook 47080179       PG  34 LAL/LAC 73 24 29.1  5.9 13.6\n4   3          LeBron James 44474988       PF  38     LAL 55 54 35.5 11.1 22.2\n5   4          Kevin Durant 44119845       PF  34 BRK/PHO 47 47 35.6 10.3 18.3\n6   5          Bradley Beal 43279250       SG  29     WAS 50 50 33.5  8.9 17.6\n7   6         Kawhi Leonard 42492492       SF  31     LAC 52 50 33.6  8.6 16.8\n8   7           Paul George 42492492       SF  32     LAC 56 56 34.6  8.2 17.9\n9   8 Giannis Antetokounmpo 42492492       PF  28     MIL 63 63 32.1 11.2 20.3\n10  9        Damian Lillard 42492492       PG  32     POR 58 58 36.3  9.6 20.7\n11 10         Klay Thompson 40600080       SF  32     GSW 69 69 33.0  7.9 18.1\n12 11          Kyrie Irving 38917057    PG-SG  30 BRK/DAL 60 60 37.4  9.9 20.1\n13 12           Rudy Gobert 38172414        C  30     MIN 70 70 30.7  5.1  7.8\n14 13       Khris Middleton 37984276       SF  31     MIL 33 19 24.3  5.4 12.3\n15 14         Anthony Davis 37980720        C  29     LAL 56 54 34.0  9.7 17.2\n16 15          Jimmy Butler 37653300       PF  33     MIA 64 64 33.4  7.5 13.9\n17 16         Tobias Harris 37633050       SF  30     PHI 74 74 32.9  5.7 11.4\n18 17          Kemba Walker 37281261       PG  32     DAL  9  1 16.0  2.7  6.3\n19 18            Trae Young 37096500       PG  24     ATL 73 73 34.8  8.2 19.0\n20 19           Zach LaVine 37096500       SG  27     CHI 77 77 35.9  8.7 18.0\n     FG. X3P X3PA  X3P.  X2P X2PA  X2P.  eFG.  FT  FTA   FT. ORB DRB  TRB  AST\n1  0.493 4.9 11.4 0.427  5.1  8.8 0.579 0.614 4.6  5.0 0.915 0.7 5.4  6.1  6.3\n2  0.408 1.0  3.2 0.303  3.1  6.7 0.459 0.457 2.3  3.3 0.681 0.4 2.3  2.7  5.2\n3  0.436 1.2  3.9 0.311  4.7  9.7 0.487 0.481 2.8  4.3 0.656 1.2 4.6  5.8  7.5\n4  0.500 2.2  6.9 0.321  8.9 15.3 0.580 0.549 4.6  5.9 0.768 1.2 7.1  8.3  6.8\n5  0.560 2.0  4.9 0.404  8.3 13.4 0.617 0.614 6.5  7.1 0.919 0.4 6.3  6.7  5.0\n6  0.506 1.6  4.4 0.365  7.3 13.2 0.552 0.551 3.8  4.6 0.842 0.8 3.1  3.9  5.4\n7  0.512 2.0  4.8 0.416  6.6 11.9 0.551 0.572 4.7  5.4 0.871 1.1 5.4  6.5  3.9\n8  0.457 2.8  7.6 0.371  5.4 10.3 0.521 0.536 4.6  5.3 0.871 0.8 5.3  6.1  5.1\n9  0.553 0.7  2.7 0.275 10.5 17.6 0.596 0.572 7.9 12.3 0.645 2.2 9.6 11.8  5.7\n10 0.463 4.2 11.3 0.371  5.4  9.4 0.574 0.564 8.8  9.6 0.914 0.8 4.0  4.8  7.3\n11 0.436 4.4 10.6 0.412  3.6  7.6 0.470 0.556 1.7  1.9 0.879 0.6 3.6  4.1  2.4\n12 0.494 3.1  8.3 0.379  6.8 11.8 0.574 0.572 4.1  4.6 0.905 1.0 4.1  5.1  5.5\n13 0.659 0.0  0.0 0.000  5.1  7.8 0.663 0.659 3.1  4.9 0.644 3.3 8.3 11.6  1.2\n14 0.436 1.5  4.9 0.315  3.8  7.4 0.516 0.499 2.8  3.1 0.902 0.8 3.4  4.2  4.9\n15 0.563 0.3  1.3 0.257  9.3 15.9 0.589 0.573 6.2  7.9 0.784 3.5 9.1 12.5  2.6\n16 0.539 0.6  1.6 0.350  6.9 12.3 0.564 0.560 7.4  8.7 0.850 2.2 3.7  5.9  5.3\n17 0.501 1.7  4.4 0.389  4.0  7.0 0.570 0.575 1.5  1.7 0.876 0.9 4.8  5.7  2.5\n18 0.421 0.8  3.1 0.250  1.9  3.2 0.586 0.482 1.9  2.3 0.810 0.3 1.4  1.8  2.1\n19 0.429 2.1  6.3 0.335  6.1 12.7 0.476 0.485 7.8  8.8 0.886 0.8 2.2  3.0 10.2\n20 0.485 2.6  7.1 0.375  6.1 11.0 0.556 0.558 4.7  5.6 0.848 0.5 3.9  4.5  4.2\n   STL BLK TOV  PF  PTS Total.Minutes  PER   TS. X3PAr   FTr ORB. DRB. TRB.\n1  0.9 0.4 3.2 2.1 29.4          1941 24.1 0.656 0.564 0.248  2.3 16.8  9.7\n2  0.8 0.4 2.4 1.7 11.4           755 13.6 0.498 0.322 0.334  2.1 11.4  6.8\n3  1.0 0.5 3.5 2.2 15.9          2126 16.1 0.513 0.289 0.317  4.7 16.5 10.8\n4  0.9 0.6 3.2 1.6 28.9          1954 23.9 0.583 0.309 0.268  3.7 20.8 12.5\n5  0.7 1.4 3.3 2.1 29.1          1672 25.9 0.677 0.267 0.387  1.2 19.5 10.5\n6  0.9 0.7 2.9 2.1 23.2          1673 19.7 0.593 0.249 0.260  2.8  9.9  6.5\n7  1.4 0.5 1.7 1.6 23.8          1748 23.9 0.623 0.287 0.320  3.7 17.8 10.8\n8  1.5 0.4 3.1 2.8 23.8          1939 19.6 0.588 0.424 0.293  2.6 17.0  9.9\n9  0.8 0.8 3.9 3.1 31.1          2024 29.0 0.605 0.134 0.604  7.3 30.0 19.1\n10 0.9 0.3 3.3 1.9 32.2          2107 26.7 0.645 0.547 0.464  2.4 12.8  7.6\n11 0.7 0.4 1.8 1.9 21.9          2279 14.7 0.576 0.584 0.105  1.9 11.7  6.9\n12 1.1 0.8 2.1 2.8 27.1          2241 22.4 0.613 0.412 0.227  3.0 12.3  7.7\n13 0.8 1.4 1.7 3.0 13.4          2148 18.9 0.675 0.005 0.623 12.2 29.8 21.2\n14 0.7 0.2 2.2 2.1 15.1           801 17.4 0.551 0.399 0.251  3.8 14.0  9.1\n15 1.1 2.0 2.2 2.6 25.9          1904 27.8 0.627 0.077 0.462 11.3 27.6 19.7\n16 1.8 0.3 1.6 1.3 22.9          2138 27.6 0.647 0.116 0.625  7.5 13.3 10.3\n17 0.9 0.5 1.2 2.0 14.7          2436 14.8 0.602 0.383 0.153  3.3 17.0 10.3\n18 0.2 0.2 0.4 1.2  8.0           144 15.0 0.543 0.491 0.368  2.4 10.6  6.5\n19 1.1 0.1 4.1 1.4 26.2          2541 22.0 0.573 0.331 0.460  2.4  7.0  4.7\n20 0.9 0.2 2.5 2.1 24.8          2768 19.0 0.607 0.392 0.308  1.7 12.2  7.1\n   AST. STL. BLK. TOV. USG.  OWS DWS   WS WS.48 OBPM DBPM  BPM VORP\n1  30.0  1.3  0.9 12.5 31.0  5.8 2.0  7.8 0.192  7.5  0.1  7.5  4.7\n2  35.3  1.8  1.4 17.1 27.0 -0.4 0.7  0.3 0.020 -0.8 -0.4 -1.2  0.1\n3  38.6  1.7  1.3 18.4 27.7 -0.6 2.6  1.9 0.044  0.3 -0.1  0.2  1.2\n4  33.5  1.2  1.4 11.6 33.3  3.2 2.4  5.6 0.138  5.5  0.6  6.1  4.0\n5  24.5  1.0  3.4 13.4 30.7  4.7 2.1  6.8 0.194  6.0  1.2  7.1  3.9\n6  26.6  1.3  1.7 12.9 29.2  2.2 1.2  3.4 0.099  2.9 -1.2  1.8  1.6\n7  19.6  2.0  1.4  8.1 27.0  4.9 2.2  7.1 0.194  5.1  0.9  6.1  3.5\n8  24.2  2.1  0.9 13.4 29.5  2.3 2.3  4.6 0.114  2.4  0.3  2.8  2.3\n9  33.2  1.2  2.1 13.2 38.8  4.9 3.7  8.6 0.204  5.8  2.7  8.5  5.4\n10 35.0  1.2  0.8 11.7 33.8  8.2 0.8  9.0 0.205  8.3 -1.2  7.1  4.9\n11 11.0  1.0  1.1  8.6 26.4  1.2 1.9  3.1 0.066  1.5 -1.7 -0.3  1.0\n12 25.4  1.4  1.7  8.8 28.9  5.4 2.0  7.4 0.159  4.8 -0.7  4.1  3.5\n13  5.6  1.2  3.9 14.9 16.3  4.3 3.5  7.8 0.174  0.0  0.7  0.7  1.4\n14 30.7  1.4  0.5 13.6 27.4  1.0 1.0  1.9 0.117  1.0 -0.3  0.8  0.6\n15 13.0  1.5  5.1  9.5 28.4  5.5 3.4  9.0 0.226  4.6  1.7  6.3  4.0\n16 27.1  2.7  1.0  8.2 25.6  9.4 2.9 12.3 0.277  6.7  2.0  8.7  5.8\n17 11.4  1.4  1.5  9.0 18.2  3.1 2.8  5.9 0.116  0.6  0.1  0.7  1.7\n18 20.1  0.7  1.2  5.7 22.1  0.2 0.1  0.3 0.098  0.3 -0.6 -0.3  0.1\n19 42.5  1.5  0.3 15.2 32.6  5.3 1.4  6.7 0.126  5.3 -2.0  3.3  3.4\n20 18.7  1.2  0.6 11.0 28.3  4.2 2.9  7.1 0.123  2.7 -0.7  1.9  2.7"
  },
  {
    "objectID": "project-proposal.html",
    "href": "project-proposal.html",
    "title": "DANL Project Proposal",
    "section": "",
    "text": "My project will study the a large dataset containing various statistics and salaries for every NBA player on a roster for the 2022-23 season. This will allow me to examine which statisitics are most valued by NBA front offices when deciding how much money they offer a given player, as well as the most important statistics, both basic and advanced, when deciding to give a player a “max” contract. With advanced statistics and analytics consistenly becoming more important in league circles, this will allow me to examine if advanced statistics that go beyond the naked eye have become more valued if front offices. I can also see which stats are most strongly correlated with higher salaries, as well as winning the most games. This will also allow me to see which basic stats are most strongly correlated to certain adavanced stats and vice versa. I plan to utilize a wide range of ggplot methods to examine these results such as correlation heat maps, bar graphs, and basic plots."
  },
  {
    "objectID": "project-proposal.html#dataset-proposal",
    "href": "project-proposal.html#dataset-proposal",
    "title": "DANL Project Proposal",
    "section": "",
    "text": "My project will study the a large dataset containing various statistics and salaries for every NBA player on a roster for the 2022-23 season. This will allow me to examine which statisitics are most valued by NBA front offices when deciding how much money they offer a given player, as well as the most important statistics, both basic and advanced, when deciding to give a player a “max” contract. With advanced statistics and analytics consistenly becoming more important in league circles, this will allow me to examine if advanced statistics that go beyond the naked eye have become more valued if front offices. I can also see which stats are most strongly correlated with higher salaries, as well as winning the most games. This will also allow me to see which basic stats are most strongly correlated to certain adavanced stats and vice versa. I plan to utilize a wide range of ggplot methods to examine these results such as correlation heat maps, bar graphs, and basic plots."
  },
  {
    "objectID": "project-proposal.html#looking-at-the-dataset",
    "href": "project-proposal.html#looking-at-the-dataset",
    "title": "DANL Project Proposal",
    "section": "2 Looking at the dataset",
    "text": "2 Looking at the dataset\n#Below, I have provided code to load and examine the dataset I plan to use for my project:\n\nfinal_project_dataset&lt;-read.csv(\"nba_2022-23_stats_salary.csv\")\nView(final_project_dataset)"
  },
  {
    "objectID": "posts/starwars/starwars_df.html",
    "href": "posts/starwars/starwars_df.html",
    "title": "Starwars",
    "section": "",
    "text": "Let’s analyze the starwars data:\nstarwars &lt;- read_csv(\"https://bcdanl.github.io/data/starwars.csv\")"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "href": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "title": "Starwars",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nfilms List of films the character appeared in\nname Name of the character\nspecies Name of species\nheight Height (cm)\nmass Weight (kg)\nhair_color, skin_color, eye_color Hair, skin, and eye colors\nbirth_year Year born (BBY = Before Battle of Yavin)\nsex The biological sex of the character, namely male, female, hermaphroditic, or none (as in the case for Droids).\ngender The gender role or gender identity of the character as determined by their personality or the way they were programmed (as in the case for Droids).\nhomeworld Name of homeworld"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#human-vs.-droid",
    "href": "posts/starwars/starwars_df.html#human-vs.-droid",
    "title": "Starwars",
    "section": "Human vs. Droid",
    "text": "Human vs. Droid\n\nggplot(data = \n         starwars %&gt;% \n         filter(species %in% c(\"Human\", \"Droid\"))) +\n  geom_boxplot(aes(x = species, y = mass, \n                   fill = species),\n               show.legend = FALSE)"
  },
  {
    "objectID": "posts/ggplot/ggplot-blog.html",
    "href": "posts/ggplot/ggplot-blog.html",
    "title": "ggplot",
    "section": "",
    "text": "The ggplot functions allow for the creation of various visual charts and graphs to display the relationships between variables. We can use coding to determine specific graphs as well as the details in these graphs to make them more visually appealing to viewers. An example of a ggplot code is below.\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy, \n                   color = class) )"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Jason Copella",
    "section": "",
    "text": "Jason Copella majors in Data Analytics with a minor in finance at SUNY Geneseo. When not working on schoolwork, Jason enjoys spending time running and listening to music."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Jason Copella",
    "section": "Education",
    "text": "Education\nState University of New York at Geneseo | Geneseo, NY  B.S. in Data Analytics | Aug 2022 - May 2025  Minor in Finance"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Jason Copella",
    "section": "Experience",
    "text": "Experience\nRied’s Food Barn| Senior Sales Associate | Nov 2019 - June 2024"
  },
  {
    "objectID": "danl-399-quarto-r.html",
    "href": "danl-399-quarto-r.html",
    "title": "Quarto with R",
    "section": "",
    "text": "“Tidy datasets are all alike, but every messy dataset is messy in its own way.” — Hadley Wickham\n\nR is a powerful language and environment for statistical computing and graphics. It is widely used among statisticians and data analysts for data analysis and developing statistical software. Here are some basic concepts and elements of R to help you get started:\n\n\n\nVariables in R are used to store data. You can create a variable using the assignment operator &lt;- (option/Alt + -). For example:\n\n\nCode\nmy_variable &lt;- 10\n\n\nThis will store the value 10 in my_variable.\n\n\n\n\n\nR has several basic data types:\n\nNumeric: For decimal values like 2.5.\nInteger: For whole numbers like 2L (the L tells R it is an integer).\nCharacter: For text or string values, e.g., \"Hello\".\nLogical: For boolean values (TRUE or FALSE).\n\n\n\n\n\n\nVectors are a basic data structure in R. They contain elements of the same type. You can create a vector using the c() function:\n\n\nCode\nmy_vector &lt;- c(1, 2, 3, 4, 5)\n\n\n\n\n\n\nData frames are used for storing data tables in R. It is a list of vectors of equal length. For example, to create a simple data frame:\n\n\nCode\ndf &lt;- data.frame(\n  Name = c(\"Alice\", \"Bob\"), \n  Age = c(25, 30)\n  )\n\n\n\n\n\n\nFunctions are used to carry out specific tasks in R. For example, sum() is a function that adds numbers together:\n\n\nCode\nsum(1, 2, 3) # Returns 6\n\n\n[1] 6\n\n\n\n\n\n\nR has a vast collection of packages for various statistical tasks. You can install a package using install.packages(\"packageName\") and load it using library(packageName).\n\n\nCode\n# install.packages(\"tidyverse\")\nlibrary(tidyverse)\n\n\n\n\n\n\nTo get help on a specific function or topic, use the help() function or the shorthand ?, like ?sum on R Console."
  },
  {
    "objectID": "danl-399-quarto-r.html#variables",
    "href": "danl-399-quarto-r.html#variables",
    "title": "Quarto with R",
    "section": "",
    "text": "Variables in R are used to store data. You can create a variable using the assignment operator &lt;- (option/Alt + -). For example:\n\n\nCode\nmy_variable &lt;- 10\n\n\nThis will store the value 10 in my_variable."
  },
  {
    "objectID": "danl-399-quarto-r.html#data-types",
    "href": "danl-399-quarto-r.html#data-types",
    "title": "Quarto with R",
    "section": "",
    "text": "R has several basic data types:\n\nNumeric: For decimal values like 2.5.\nInteger: For whole numbers like 2L (the L tells R it is an integer).\nCharacter: For text or string values, e.g., \"Hello\".\nLogical: For boolean values (TRUE or FALSE)."
  },
  {
    "objectID": "danl-399-quarto-r.html#vectors",
    "href": "danl-399-quarto-r.html#vectors",
    "title": "Quarto with R",
    "section": "",
    "text": "Vectors are a basic data structure in R. They contain elements of the same type. You can create a vector using the c() function:\n\n\nCode\nmy_vector &lt;- c(1, 2, 3, 4, 5)"
  },
  {
    "objectID": "danl-399-quarto-r.html#data-frames",
    "href": "danl-399-quarto-r.html#data-frames",
    "title": "Quarto with R",
    "section": "",
    "text": "Data frames are used for storing data tables in R. It is a list of vectors of equal length. For example, to create a simple data frame:\n\n\nCode\ndf &lt;- data.frame(\n  Name = c(\"Alice\", \"Bob\"), \n  Age = c(25, 30)\n  )"
  },
  {
    "objectID": "danl-399-quarto-r.html#functions",
    "href": "danl-399-quarto-r.html#functions",
    "title": "Quarto with R",
    "section": "",
    "text": "Functions are used to carry out specific tasks in R. For example, sum() is a function that adds numbers together:\n\n\nCode\nsum(1, 2, 3) # Returns 6\n\n\n[1] 6"
  },
  {
    "objectID": "danl-399-quarto-r.html#packages",
    "href": "danl-399-quarto-r.html#packages",
    "title": "Quarto with R",
    "section": "",
    "text": "R has a vast collection of packages for various statistical tasks. You can install a package using install.packages(\"packageName\") and load it using library(packageName).\n\n\nCode\n# install.packages(\"tidyverse\")\nlibrary(tidyverse)"
  },
  {
    "objectID": "danl-399-quarto-r.html#help-system",
    "href": "danl-399-quarto-r.html#help-system",
    "title": "Quarto with R",
    "section": "",
    "text": "To get help on a specific function or topic, use the help() function or the shorthand ?, like ?sum on R Console."
  },
  {
    "objectID": "danl-399-quarto-r.html#key-concepts",
    "href": "danl-399-quarto-r.html#key-concepts",
    "title": "Quarto with R",
    "section": "2.1 Key Concepts",
    "text": "2.1 Key Concepts\n\nData: The raw data that you want to plot.\naes() (Aesthetic Mappings): Defines how data are mapped to color, size, shape, and other visual properties.\nGeoms (Geometric Objects): The type of objects that represent data points, like points, lines, bars, etc.\nFacets: For creating small multiples, splitting data into subsets and displaying the same plot for each subset.\nScales: Control how data values are translated to visual properties.\nCoordinate Systems: The plane in which data is plotted, e.g., Cartesian, polar.\nThemes: Control the overall appearance of the plot, like background color, grid lines, and font sizes."
  },
  {
    "objectID": "danl-399-quarto-r.html#examples",
    "href": "danl-399-quarto-r.html#examples",
    "title": "Quarto with R",
    "section": "2.2 Examples",
    "text": "2.2 Examples\nLet’s go through some examples to illustrate how ggplot can be used to create different types of visualizations.\n\n2.2.1 Scatter Plot\nCreating a scatter plot to explore the relationship between two variables, say mpg (miles per gallon) and wt (weight of the car) from the mtcars dataset.\n\n\nCode\nggplot(mtcars, aes(x = wt, y = mpg)) + \n  geom_point() +\n  labs(x = \"Weight of Car\", y = \"Miles Per Gallon\",\n       title = \"Scatter plot of MPG vs Car Weight\")\n\n\n\n\n\n\n\n\n\nThis code block creates a scatter plot where car weight is on the x-axis and miles per gallon on the y-axis. Each point represents a car.\n\n\n2.2.2 Bar Chart\nCreating a bar chart to show the count of cars by the number of cylinders.\n\n\nCode\nggplot(mtcars, aes(x = factor(cyl))) + \n  geom_bar() + \n  labs(x = \"Number of Cylinders\", y = \"Count\",\n       title = \"Count of Cars by Cylinders\")\n\n\n\n\n\n\n\n\n\nThis plots a bar chart where each bar represents the count of cars with a certain number of cylinders.\n\n\n2.2.3 Line Graph\nPlotting a line graph, assuming we have a time series data.frame economics that is part of ggplot2 package.\n\n\nCode\nggplot(economics, aes(x = date, y = unemploy)) + \n  geom_line() +\n  labs(x = \"Year\", y = \"Number of Unemployed Persons\",\n       title = \"Unemployment over Time\") \n\n\n\n\n\n\n\n\n\nThis code plots the unemployment numbers over time, with time on the x-axis and the number of unemployed persons on the y-axis.\n\n\n2.2.4 Faceted Plot\nCreating a faceted plot to compare scatter plots of mpg vs wt across different numbers of cylinders.\n\n\nCode\nggplot(mtcars, aes(x = wt, y = mpg)) + \n  geom_point() +\n  facet_wrap(~cyl) +\n  labs(title = \"MPG vs Weight by Number of Cylinders\")\n\n\n\n\n\n\n\n\n\nThis splits the data into subsets based on the number of cylinders and creates a scatter plot for each subset."
  },
  {
    "objectID": "danl-399-quarto-r.html#conclusion",
    "href": "danl-399-quarto-r.html#conclusion",
    "title": "Quarto with R",
    "section": "2.3 Conclusion",
    "text": "2.3 Conclusion\nggplot2 provides a powerful and flexible system for making a wide variety of plots. By understanding the grammar of graphics upon which it is based, you can build up complex visualizations from simple components, allowing for a deep and intuitive exploration of data."
  },
  {
    "objectID": "blog-listing.html",
    "href": "blog-listing.html",
    "title": "Insightful Analytics",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nggplot\n\n\n\n\n\n\n\n\nFeb 21, 2024\n\n\nJason Copella\n\n\n2 min\n\n\n\n\n\n\n\n\n\n\n\n\nggplot Basics\n\n\n\n\n\n\n\n\nFeb 20, 2024\n\n\nJason Copella\n\n\n2 min\n\n\n\n\n\n\n\n\n\n\n\n\nStarwars\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nYour Name\n\n\n3 min\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\n\nOct 27, 2023\n\n\nYOUR NAME\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "DANL-399-midterm.html",
    "href": "DANL-399-midterm.html",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "",
    "text": "library(knitr)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(socviz)\nlibrary(ggthemes)\nlibrary(ggrepel)\nlibrary(ggtext)\nlibrary(hrbrthemes)\nlibrary(gapminder)\nlibrary(ggridges)"
  },
  {
    "objectID": "DANL-399-midterm.html#loading-r-packages",
    "href": "DANL-399-midterm.html#loading-r-packages",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "",
    "text": "library(knitr)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(socviz)\nlibrary(ggthemes)\nlibrary(ggrepel)\nlibrary(ggtext)\nlibrary(hrbrthemes)\nlibrary(gapminder)\nlibrary(ggridges)"
  },
  {
    "objectID": "DANL-399-midterm.html#using-the-power-of-nature-to-clean-the-oceans",
    "href": "DANL-399-midterm.html#using-the-power-of-nature-to-clean-the-oceans",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Using The Power of Nature to Clean the Oceans",
    "text": "Using The Power of Nature to Clean the Oceans\n\n\n\nMr. Trash Wheel\n\n\nMr. Trash Wheel is a semi-autonomous trash interceptor that is placed at the end of a river, stream or other outfall.\nFar too lazy to chase trash around the ocean, Mr. Trash Wheel stays put and waits for the waste to flow to him.\nSustainably powered and built to withstand the biggest storms, Mr. Trash Wheel uses a unique blend of solar and hydro power to pull hundreds of tons of trash out of the water each year."
  },
  {
    "objectID": "DANL-399-midterm.html#meet-the-mr.-trash-wheel-family",
    "href": "DANL-399-midterm.html#meet-the-mr.-trash-wheel-family",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Meet the Mr. Trash Wheel Family",
    "text": "Meet the Mr. Trash Wheel Family\n\n\n\n\n\n\nMister Trash Wheel\n\n\n\n\nInstalled: May 9, 2014\nLocation: Jones Falls stream, Inner Harbor, Baltimore, MD\n\n\n\n\n\n\n\n\nProfessor Trash Wheel\n\n\n\n\nInstalled: December 4, 2016\nLocation: Harris Creek, Canton neighborhood, Baltimore, MD\n\n\n\n\n\n\n\n\nCaptain Trash Wheel\n\n\n\n\n\nInstalled: June 5, 2018\nLocation: Masonville Cove, Baltimore, MD\n\n\n\n\n\n\n\n\nGwynnda Trash Wheel\n\n\n\n\n\nInstalled: June 3, 2021\nLocation: Gwynns Falls, West Baltimore, MD\n\n\n\n\n\nThe following is the data frames for Question 1.\n\n\ntrashwheel &lt;- read_csv('https://bcdanl.github.io/data/trashwheel.csv')"
  },
  {
    "objectID": "DANL-399-midterm.html#variable-description-for-trashwheel",
    "href": "DANL-399-midterm.html#variable-description-for-trashwheel",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Variable Description for trashwheel",
    "text": "Variable Description for trashwheel\n\n\n\n\n\n\n\n\nvariable\ntype\ndescription\n\n\n\n\nName\ncharacter\nName of the Trash Wheel\n\n\nMonth\ncharacter\nMonth\n\n\nYear\nnumeric\nYear\n\n\nDate\ncharacter\nDate (Monthly)\n\n\nWeight\nnumeric\nWeight in tons\n\n\nVolume\nnumeric\nVolume in cubic yards\n\n\nPlasticBottles\nnumeric\nNumber of plastic bottles\n\n\nPolystyrene\nnumeric\nNumber of polystyrene items\n\n\nCigaretteButts\nnumeric\nNumber of cigarette butts\n\n\nGlassBottles\nnumeric\nNumber of glass bottles\n\n\nPlasticBags\nnumeric\nNumber of plastic bags\n\n\nWrappers\nnumeric\nNumber of wrappers\n\n\nSportsBalls\nnumeric\nNumber of sports balls\n\n\nHomesPowered\nnumeric\nHomes Powered - Each ton of trash equates to on average 500 kilowatts of electricity. An average household will use 30 kilowatts per day."
  },
  {
    "objectID": "DANL-399-midterm.html#q1a",
    "href": "DANL-399-midterm.html#q1a",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1a",
    "text": "Q1a\n\nProvide an R code to calculate mean and standard deviation of Volume for “Mister Trash Wheel”.\n\nAnswer :\n\nmean(trashwheel$Volume)\n\n[1] 60.96708\n\nsd(trashwheel$Volume)\n\n[1] 61.35656"
  },
  {
    "objectID": "DANL-399-midterm.html#q1b",
    "href": "DANL-399-midterm.html#q1b",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1b",
    "text": "Q1b\n\nProvide a ggplot code to replicate the following ggplot figure that describes how the distribution of Weight varies by Name.\n\nThe number of bins in each subplot below is 15.\n\n\nAnswer :\n\nggplot(trashwheel) +\ngeom_bar(mapping = aes(x = Weight, fill = Name), show.legend = FALSE) +\n  facet_wrap(. ~ Name) + \n   scale_y_continuous(\n    limits = c(0, 40), breaks = c(10,20,30))"
  },
  {
    "objectID": "DANL-399-midterm.html#q1c",
    "href": "DANL-399-midterm.html#q1c",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1c",
    "text": "Q1c\n\nProvide a comment to describe how the distribution of Weight varies by Name, as visualized in Q1b.\n\nAnswer : The Professor and Captain trashwheels exclusively pickup smaller weight.The Mister and Gwynnda, meanwhile, carry a wide range of weights, both heavy and small."
  },
  {
    "objectID": "DANL-399-midterm.html#q1d",
    "href": "DANL-399-midterm.html#q1d",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1d",
    "text": "Q1d\n\nProvide a ggplot code to replicate the following ggplot figure that describes how the monthly trend of HomesPowered varies by Name.\n\nAnswer :\n\ntrashwheel |&gt;\nggplot(aes(x = Date, y = HomesPowered)) +\ngeom_line(aes(color = Name), show.legend = FALSE) +\n  geom_smooth(size = 1.1, method = loess , se = FALSE, formula = y ~ log(x)) + \n  facet_wrap(. ~ Name, scales = \"free\")"
  },
  {
    "objectID": "DANL-399-midterm.html#q1e",
    "href": "DANL-399-midterm.html#q1e",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1e",
    "text": "Q1e\n\nProvide a comment to describe how the monthly trend of HomesPowered varies by Name, as visualized in Q1d.\n\nAnswer : The Professor, Mister, and Captain trash wheels have overall stayed at a consistent rate through the years. The Gwynnda trashwheel has grown substantially recently. The Mister powers its most homes during the middle months of the year, while the Professor fluctuates each month. The Gwynnda powers its most homes during the later months of the year. The Captain mainly powers its most homes around the middle months of the year.\n\nFor Q1f and Q1h, use the following data.frame, trashwheel_long.\n\ntrashwheel_long &lt;- trashwheel |&gt; \n  ungroup() |&gt; \n  select(Name, Date, PlasticBottles:SportsBalls) |&gt; \n  pivot_longer(cols = PlasticBottles:SportsBalls,\n               values_to = \"Number\",\n               names_to = \"Trash_Type\") |&gt; \n  arrange(Trash_Type, Date)"
  },
  {
    "objectID": "DANL-399-midterm.html#variable-description-for-trashwheel_long",
    "href": "DANL-399-midterm.html#variable-description-for-trashwheel_long",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Variable Description for trashwheel_long",
    "text": "Variable Description for trashwheel_long\n\n\n\nvariable\ntype\ndescription\n\n\n\n\nName\ncharacter\nName of the Trash Wheel\n\n\nDate\ncharacter\nDate (Monthly)\n\n\nTrash_Type\nnumeric\nType of Trashes\n\n\nNumber\nnumeric\nNumber of trash items"
  },
  {
    "objectID": "DANL-399-midterm.html#q1f",
    "href": "DANL-399-midterm.html#q1f",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1f",
    "text": "Q1f\n\nProvide a ggplot code to replicate the following ggplot figure that describes how the daily trend of log10(Number) varies by Trash_Type and Name.\n\nAnswer :\n\ntrashwheel_long |&gt;\nggplot(aes(x = Date, y = log10(Number))) +\ngeom_line(aes(color = Trash_Type)) +\n  geom_smooth(size = 1.1, method = loess , se = FALSE) + \n  facet_wrap(. ~ Name, scales = \"free\")"
  },
  {
    "objectID": "DANL-399-midterm.html#q1g",
    "href": "DANL-399-midterm.html#q1g",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1g",
    "text": "Q1g\n\nProvide a comment to describes how the daily trend of log10(Number) varies by Trash_Type and Name, as visualized in Q1f.\n\nAnswer : For every Name, cigarette butts were the highest log10(Number) value. Mister was the only trash wheel to collect sports balls, the other three did not at all. For the most part, all other types of trash followed the same trend as the other trash types for a given trashwheel."
  },
  {
    "objectID": "DANL-399-midterm.html#q1h",
    "href": "DANL-399-midterm.html#q1h",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1h",
    "text": "Q1h\n\nProvide a ggplot code to replicate the following ggplot figure that describes how the distribution of log10(Number) varies by Trash_Type and Name.\n\nAnswer :\n\ntrashwheel_long |&gt;\nggplot(aes(x = log10(Number), y = Trash_Type)) +\ngeom_boxplot(aes(fill = Trash_Type),show.legend = FALSE) +\n  facet_wrap(. ~ Name, scales = \"free\")"
  },
  {
    "objectID": "DANL-399-midterm.html#q1i",
    "href": "DANL-399-midterm.html#q1i",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q1i",
    "text": "Q1i\n\nProvide a comment to describe how the distribution of Number varies by Trash_Type and Name, as visualized in Q1h.\n\nIn your comment, please include how the median Number of “CigaretteButts” varies by Name.\n\n\nAnswer : The Captain is the only trashwheel to have a median number of cigarettes less than four. The Gwynnda had a far greater disitrbution of values in comparison to the other three trashwheels. The Gwynnda and Captain did not collect any sports balls or glass bottles, whil the other two both collected glass bottles. The overall distribution besides the lack of inclusion of those two trash types is similar for all four trashwheels."
  },
  {
    "objectID": "DANL-399-midterm.html#q2a",
    "href": "DANL-399-midterm.html#q2a",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q2a",
    "text": "Q2a\n\nReplicate the following ggplot.\n\nUse the color #496d9b for United States, and #fffff0 for the rest of countries.\n\n\n\ngapminder |&gt;\n  filter(continent != \"Oceania\") |&gt;\nggplot(aes(x = lifeExp, y = country)) +\ngeom_boxplot(aes(fill = \"#fffff0\"),show.legend = FALSE) +\n  facet_wrap(. ~ continent, scales = \"free\")"
  },
  {
    "objectID": "DANL-399-midterm.html#q2b",
    "href": "DANL-399-midterm.html#q2b",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q2b",
    "text": "Q2b\n\nMake a simple comment on the visualization result. The United States has the second highest life expectancy for countries in the Americas. This should be expected for a nation on the forefront of medical work and development, as well as food/water availability."
  },
  {
    "objectID": "DANL-399-midterm.html#q3a",
    "href": "DANL-399-midterm.html#q3a",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q3a",
    "text": "Q3a\n\nReplicate the following ggplot.\n\n\npolitical_ideology &lt;- political_ideology |&gt; \n  mutate(\n    party = fct_relevel(party, \n                         \"GOP\", \"DEM\"),\n    party = fct_recode(party, \n                        Republican = \"GOP\", \n                         Democrat = \"DEM\")\n  )\n\np &lt;- ggplot(political_ideology, \n            aes(x = ideology_score, y = factor(year), \n                fill = party)\n            )\n\np + geom_density_ridges(\n  scale = 3, rel_min_height = 0.01,\n  color = \"white\", alpha = 0.5) + \nscale_x_continuous(\n  name = \"Ideology score\",\n  limits = c(-1.00, 1.5), breaks = c(-0.75, -0.50, -0.25, 0, 0.25, 0.50, 0.75, 1.00)\n) +\nscale_y_discrete(\n  name = \"Year\", breaks = c(1963, 1973, 1983, 1993, 2003, 2013)) + \n  scale_fill_manual(values = c(\"red\",\"blue\"))"
  },
  {
    "objectID": "DANL-399-midterm.html#q3b",
    "href": "DANL-399-midterm.html#q3b",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q3b",
    "text": "Q3b\n\nMake a simple comment on the visualization result in Q3a. As time has gone on, Republicans have had a positive increase in ideology score while democrats have had a negative increase in ideology score, showing greater divide between the two parties."
  },
  {
    "objectID": "DANL-399-midterm.html#q4a",
    "href": "DANL-399-midterm.html#q4a",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4a",
    "text": "Q4a\n\nReplicate the following visualization\n\n\nbrexit &lt;- brexit |&gt; \n  mutate(\n    region = fct_relevel(region, \n                         \"london\", \"rest_of_south\", \"midlands_wales\", \"north\", \"scot\"),\n    region = fct_recode(region, \n                        London = \"london\", \n                        `Rest of South` = \"rest_of_south\", \n                        `Midlands / Wales` = \"midlands_wales\", \n                        North = \"north\", \n                        Scotland = \"scot\")\n  )\n\nggplot(brexit, \n       aes(y = opinion, fill = opinion)) +\n  geom_bar() +\n  facet_wrap( ~ region, \n             nrow = 1, \n             labeller = label_wrap_gen(width = 12)) +\n  guides(fill = \"none\") +\n  labs(\n    title = \"Was Britain right/wrong to vote to leave EU?\",\n    subtitle = \"YouGov Survey Results, 2-3 September 2019\",\n    caption = \"Source: bit.ly/2lCJZVg\",\n    x = NULL, y = NULL\n  ) +\n  scale_fill_manual(values = c(\n    \"gray\",\n    \"#67a9cf\",\n    \"#ef8a62\"\n  )) +\n  theme_minimal()"
  },
  {
    "objectID": "DANL-399-midterm.html#q4b",
    "href": "DANL-399-midterm.html#q4b",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4b",
    "text": "Q4b\n\nReplicate the following visualization\n\nHow is the story this visualization telling different than the story the plot in Q4a?\n\n\n\nbrexit &lt;- brexit |&gt; \n  mutate(\n    region = fct_relevel(region, \n                         \"london\", \"rest_of_south\", \"midlands_wales\", \"north\", \"scot\"),\n    region = fct_recode(region, \n                        London = \"london\", \n                        `Rest of South` = \"rest_of_south\", \n                        `Midlands / Wales` = \"midlands_wales\", \n                        North = \"north\", \n                        Scotland = \"scot\")\n  )\n\nggplot(brexit, \n       aes(y = opinion, fill = opinion)) +\n  geom_bar() +\n  facet_wrap( ~ region, \n             nrow = 1, \n             labeller = label_wrap_gen(width = 12), scales = \"free_x\") +\n  guides(fill = \"none\") +\n  labs(\n    title = \"Was Britain right/wrong to vote to leave EU?\",\n    subtitle = \"YouGov Survey Results, 2-3 September 2019\",\n    caption = \"Source: bit.ly/2lCJZVg\",\n    x = NULL, y = NULL\n  ) +\n  scale_fill_manual(values = c(\n    \"gray\",\n    \"#67a9cf\",\n    \"#ef8a62\"\n  )) +\n  theme_minimal()"
  },
  {
    "objectID": "DANL-399-midterm.html#q4c",
    "href": "DANL-399-midterm.html#q4c",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4c",
    "text": "Q4c\n\nFirst, calculate the proportion of wrong, right, and don’t know answers in each region and then plot these proportions (rather than the counts) and then improve axis labeling.\n\n\nq4 &lt;- brexit |&gt; \n  group_by(region, opinion) |&gt;  \n  summarise(n = n()) |&gt; \n  mutate(tot = sum(n),\n         prop = n / tot ) \n\n\nReplicate the following visualization\n\nHow is the story this visualization telling different than the story the plot in Q4b?\n\n\n\nggplot(q4, \n       aes(x = prop, y = opinion, fill = opinion)) +\n  geom_col() +\n  facet_wrap( ~ region, \n             nrow = 1, \n             labeller = label_wrap_gen(width = 12), scales = \"free_x\") +\n  guides(fill = \"none\") +\n  labs(\n    title = \"Was Britain right/wrong to vote to leave EU?\",\n    subtitle = \"YouGov Survey Results, 2-3 September 2019\",\n    caption = \"Source: bit.ly/2lCJZVg\",\n    x = \"Percent\", y = NULL\n  ) +\n  scale_fill_manual(values = c(\n    \"gray\",\n    \"#67a9cf\",\n    \"#ef8a62\"\n  )) +\n  theme_minimal()"
  },
  {
    "objectID": "DANL-399-midterm.html#q4d.",
    "href": "DANL-399-midterm.html#q4d.",
    "title": "DANL 399: Data Visualization and Presentation",
    "section": "Q4d.",
    "text": "Q4d.\n\nRecreate the same visualization from the previous exercise, this time dodging the bars for opinion proportions for each region, rather than faceting by region and then improve the legend.\n\n\nggplot(q4, \n       aes(x = prop, y = region, fill = opinion)) +\n  geom_col(position = position_dodge()) +\n  guides(fill = \"none\") +\n  labs(\n    title = \"Was Britain right/wrong to vote to leave EU?\",\n    subtitle = \"YouGov Survey Results, 2-3 September 2019\",\n    caption = \"Source: bit.ly/2lCJZVg\",\n    x = \"Percent\", y = NULL\n  ) +\n  scale_fill_manual(values = c(\n    \"gray\",\n    \"#67a9cf\",\n    \"#ef8a62\"\n  )) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nHow is the story this visualization telling different than the story the previous plot tells?\n\nThis visualization allows us to easily compare the various region and their opinions. They are now no longer side by side and are instead compared on top of each other. This allows for an for a much easier comparison between the various opinion rates of the regions. Before, it was hard to compare them as they were not easily presented on top of each other as they are now."
  },
  {
    "objectID": "NBAProjectCopella.html",
    "href": "NBAProjectCopella.html",
    "title": "The Role of Basic and Advanced Statistics in NBA Contracts",
    "section": "",
    "text": "library(ggrepel)\n\nWarning: package 'ggrepel' was built under R version 4.2.3\n\n\nLoading required package: ggplot2\n\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.2.3\n\n\nWarning: package 'tibble' was built under R version 4.2.3\n\n\nWarning: package 'tidyr' was built under R version 4.2.3\n\n\nWarning: package 'readr' was built under R version 4.2.3\n\n\nWarning: package 'purrr' was built under R version 4.2.3\n\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\nWarning: package 'stringr' was built under R version 4.2.3\n\n\nWarning: package 'forcats' was built under R version 4.2.3\n\n\nWarning: package 'lubridate' was built under R version 4.2.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ lubridate 1.9.2     ✔ tibble    3.2.1\n✔ purrr     1.0.1     ✔ tidyr     1.3.0\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(datasets)\nlibrary(gapminder)\n\nWarning: package 'gapminder' was built under R version 4.2.3\n\nlibrary(skimr)   \n\nWarning: package 'skimr' was built under R version 4.2.3\n\nlibrary(scales)  \n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nlibrary(ggthemes)  \n\nWarning: package 'ggthemes' was built under R version 4.2.3\n\nlibrary(hrbrthemes) \n\nWarning: package 'hrbrthemes' was built under R version 4.2.3\n\n\nNOTE: Either Arial Narrow or Roboto Condensed fonts are required to use these themes.\n      Please use hrbrthemes::import_roboto_condensed() to install Roboto Condensed and\n      if Arial Narrow is not on your system, please see https://bit.ly/arialnarrow\n\nlibrary(lubridate)\nlibrary(ggridges)\n\nWarning: package 'ggridges' was built under R version 4.2.3\n\nlibrary(DT)\n\nWarning: package 'DT' was built under R version 4.2.3\n\ntheme_set(theme_minimal()) \n\nknitr::opts_chunk$set(fig.width=8, fig.height=5,\n                      echo = T, eval = T, \n                      message=F, warning = F, fig.cap = \" \")  \n\n#Introduction My dataset consists of statistical in-game data, categorical data, and salary data for every NBA player to register playing time in the 2022-23 NBA Season. I wanted to use this data to examine what statistics, specifically successful teams, are most putting weight into when deciding the allocation of dollars when constructing a team. Are the most successful teams still following an old-school approach of valuing basic statistics such as PPG, 3P%, and Minutes Played? Has the new wave of advanced stats such as VORP, Win Shares, and TS% taken over? I aim to find the best budget players in the NBA and the most important aspects of building a championship-caliber team.\n\nnba_data&lt;-read_csv(\"nba_stats_salary.csv\")\n\n#Salary Information For context, the mean salary for an NBA player for the 2022-23 season was $8,416,599. The salary cap for this $123,655,000. The Larry Bird Exception in the CBA allows teams to go over the salary cap to resign their own players. Thus, the best teams are constructed through savvy drafting and trades. A team must be smart in how they utilize the money they give out to avoid the dreaded overpaid player. Typically, the best budget players are still on their rookie contracts, which last four years after they are drafted. From there, players are eligible for max and supermax contracts, which had a maximum value of $48 million for this season.\n#Statistics I looked at: Points Per Game (PPG) Assists Per Game (APG) Rebounds Per Game (RPG) Three Pointers Per Game Total Minutes Played Player Efficiency Rating (PER) (PTS + REB + AST + STL + BLK − Missed FG − Missed FT - TO) / GP. True Shooting Percentage (TS%) half the points scored divided by the sum of the field goals attempted and 0.475 times the free throws attempted. Usage Percentage (USG%) 100 times the sum of field goals attempted, a third of assists, turnovers and 0.44 times free throws attempted, all divided by the possessions Win Shares (WS) dividing the sum of the player’s marginal point production by his team’s marginal points per win, provides a more holistic overlook than PER and better accounts for defense. Box Plus-Minus (BPM) uses a player’s box score information, position, and the team’s overall performance to estimate the player’s contribution in points above league average per 100 possessions played (does not take into account minutes played) Value Over Replacement Player (VORP) converts the BPM rate into an estimate of each player’s overall contribution to the team, measured vs. what a theoretical “replacement player” would provide, where the “replacement player” is defined as a player on minimum salary or not a normal member of a team’s rotation.\n#Observing Correlation Between Salary and These Statistics\n\ncor(nba_data$Salary, nba_data$PTS)\n\n[1] 0.7275967\n\ncor(nba_data$Salary, nba_data$`Total Minutes`)\n\n[1] 0.5658969\n\ncor(nba_data$Salary, nba_data$TRB)\n\n[1] 0.5036332\n\ncor(nba_data$Salary, nba_data$AST)\n\n[1] 0.5939712\n\ncor(nba_data$Salary, nba_data$`3P`)\n\n[1] 0.4802388\n\ncor(nba_data$Salary, nba_data$VORP)\n\n[1] 0.680339\n\ncor(nba_data$Salary, nba_data$`TS%`, use='complete.obs')\n\n[1] 0.1601684\n\ncor(nba_data$Salary, nba_data$`USG%`)\n\n[1] 0.4880628\n\ncor(nba_data$Salary, nba_data$WS)\n\n[1] 0.6246638\n\ncor(nba_data$Salary, nba_data$BPM)\n\n[1] 0.3823459\n\ncor(nba_data$Salary, nba_data$PER)\n\n[1] 0.41179\n\n\n#Plotting Relationship Between VORP and PPG\n\nggplot(nba_data, aes(x = PTS, y = VORP)) + \n  geom_point(aes(color = WS)) + \n  labs(x = \"Points Per Game (PPG)\",\n       y = \"Value Over Replacement Player (VORP)\", title = \"Relationship Between VORP and PPG\") +\n  stat_smooth(method = \"loess\", \n              formula = y ~ x, \n              geom = \"smooth\")\n\n\n\n\n\n\n\n\nAs you can see, VORP is heavily dependent on win shares and points per game. Win shares is a better indicator than PPG in my opinion as it takes into account defense and other elements of the game beyond just scoring. As shown by the line of best fit, both have a strong positive relationship with VORP.\n#Plotting the Relationship Between VORP and Salary\n\nggplot(nba_data, aes(x = VORP, y = Salary)) + \n  geom_point(alpha = 0.4, color = \"red\") + \n  stat_smooth(method = \"lm\", \n              formula = y ~ x, \n              geom = \"smooth\") +\n  scale_y_comma() +\n  labs(x = \"Value Over Replacement Player (VORP)\",\n       y = \"Player Salary ($)\", title = \"Relationship Between Salary and VORP\")+\n  theme(axis.title.y = element_text(margin = margin(0, 10, 0, 0)))\n\n\n\n\n\n\n\n\nOverall, VORP is positively correlated with salary. However, there are some extreme outliers in this plot that I wanted to further examine and provide context for.\n#Creating a Criteria to Find the Most Overpaid/Underpaid Players I wanted to observe which players were outliers in my previous plot. To do this, I created two brand new variables and filtered a new dataset to eliminate small sample sizes that may skew the data. First, I created a dollar per point per game variable to determine which players provided the most/least scoring for how much they were paid. Then, I wanted only players that played a significant amount of games to avoid skewing the results, so I created a new dataset consisting of only players that played in 45+ games.\n\nnba_data$DollarPerPPG&lt;-(nba_data$Salary/nba_data$PTS)\nnba_data$DollarPerVORP&lt;-(nba_data$Salary/nba_data$VORP)\nnba_data_eligibleplayers&lt;-filter(nba_data, nba_data$GP&gt;45)\n\n#Overpaid Players in 2022-23: Kevin Love (Cleveland Cavaliers/Miami Heat) $3,726,459.5 per Point Per Game $38,196,210 per 1 Value Over Replacement Player Joe Harris (Brooklyn Nets) $2,453,007.50 per Point Per Game $62,142,857 per 1 Value Over Replacement Player Gordon Hayward (Charlotte Hornets) $2,045,918.4 per Point Per Game $150,375,000 per 1 Value Over Replacement Player\n#What Leads to Overpaid Players? 2 of the three players listed as examples in the previous slide were signed to max contracts while already in their late 20s, which is typically past the athletic prime for an NBA player. Harris also signed his lucrative deal in his late 20s. As a result, these players, by the time they reached the end of these massive deals, had clearly lost a step in their game due to a combination of both injuries and age. This led to teams paying costly “buyouts” in the case of Love and Hayward. The Nets, meanwhile, traded Harris following the season for a minimal return. While the basic stats do not look awful on the surface for these three players, their VORP shows their actual meaningful contributions to a team are minimal at best at this point. NBA teams finally recognized this only just recently with all three now playing bench roles at the end of the 2023-24 season.\n#Underpaid Players in 2022-23 Desmond Bane (Memphis Grizzlies) $99,080.93 per Point Per Game $852,096.00 per 1 Value Over Replacement Player Austin Reaves (Los Angeles Lakers) $120,270.62 per Point Per Game $1.302,931.70 per 1 Value Over Replacement Player Immanuel Quickley (New York Knicks) $155,452.35 per Point Per Game $1,102,971.40 per 1 Value Over Replacement Player\n#What Leads to Underpaid Players? None of the players listed in the previous slide were lottery (top 14) selections in their respective drafts. Bane and Quickley were late first round selections, while Reaves was not even drafted. However, all three carved out crucial roles on playoff teams in the 2022-23 season. This shows the importance of looking beyond just the lottery stage to find talent for a competitive team. While lottery players will make upwards of $5 million on rookie contracts, late first round and undrafted talent make well under $2 million. Additionally, teams can have restricted free agent rights to retain this talent. Elite teams need great role players and to properly navigate the salary cap, a bulk of this talent needs to be scouted and drafted in the later stages of the draft.\n#Observing a Successful Team The model showing the relationship between VORP and Salary show teams prioritize VORP, and to an extent Win Shares, when deciding how to spend their cap space on their roster. However, signing lucrative extensions can end up costing teams their championship window as players succumb to age and injury. The Boston Celtics, one of the league’s best teams in recent years, propose an interesting case study on how to successfully allocate salary.\n\nnba_data_celtics&lt;-filter(nba_data_eligibleplayers, Team == \"BOS\")\nmean(nba_data_eligibleplayers$VORP)\n\n[1] 0.8854093\n\nmean(nba_data_celtics$VORP)\n\n[1] 1.67\n\nmean(nba_data_eligibleplayers$Salary)\n\n[1] 11230766\n\nmean(nba_data_celtics$Salary)\n\n[1] 15389529\n\nmean(nba_data_eligibleplayers$WS)\n\n[1] 3.541637\n\nmean(nba_data_celtics$WS)\n\n[1] 5.04\n\nmean(nba_data_eligibleplayers$DollarPerVORP)\n\n[1] Inf\n\nmean(nba_data_celtics$DollarPerVORP)\n\n[1] 8581931\n\n\nWhile the Celtics spend, on average, more money per player than other NBA teams, they are much more effective in how they allocate that money. They spend it on players with higher win shares and are able to get more VORP per dollar from their players than league average. This gives insight into how the Celtics have been so successful for years.\n#Can We Accurately Predict Future Salaries with Just VORP? Given how VORP is a collection of multiple player metrics and statistics, could it be an accurate predictor of future salaries? I observed three players who became free agents following the 2022-23 season and utilized to slope of the line of best fit for the Salary-VORP graph. Donte DiVincenzo (GSW -&gt; NYK) 1.3 VORP, Predicted Salary: ≈ $12,500,000, Actual Salary: $11,717,500 Bruce Brown (DEN -&gt; IND) 0.9 VORP, Predicted Salary: ≈ $10,500,000, Actual Salary: $22,500,000 Austin Reaves (LAL) 1.2 VORP, Predicted Salary: ≈ $12,000,000, Actual Salary: $13,456,968\n#Limitations of This Simple Model: A Strict VORP Model Cannot Account for a Player’s Age Intangibles League Reputation Salary Floor/Cap Loyalty/Hometown Discounts Supermax Contracts Contract Length\n#Works Cited: https://www.spotrac.com/nba https://www.basketball-reference.com/about/glossary.html#:~:text=VORP%20%2D%20Value%20Over%20Replacement%20Player,to%20an%2082%2Dgame%20season. https://www.nba.com/players/free-agent-tracker/2023 https://theathletic.com/4660230/2023/07/02/nba-free-agency-2023-salary-cap-space/ https://hoopshype.com/2018/10/10/nba-bird-rights/"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "ggplot Basics",
    "section": "",
    "text": "The ggplot functions allow for the creation of various visual charts and graphs to display the relationships between variables. We can use coding to determine specific graphs as well as the details in these graphs to make them more visually appealing to viewers. An example of a ggplot code is below.\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy, \n                   color = class) )\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not\nfound in Windows font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not\nfound in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not\nfound in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "The Role of Basic and Advanced Statistics in NBA Contracts",
    "section": "",
    "text": "library(ggrepel)\n\nWarning: package 'ggrepel' was built under R version 4.2.3\n\n\nLoading required package: ggplot2\n\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.2.3\n\n\nWarning: package 'tibble' was built under R version 4.2.3\n\n\nWarning: package 'tidyr' was built under R version 4.2.3\n\n\nWarning: package 'readr' was built under R version 4.2.3\n\n\nWarning: package 'purrr' was built under R version 4.2.3\n\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\nWarning: package 'stringr' was built under R version 4.2.3\n\n\nWarning: package 'forcats' was built under R version 4.2.3\n\n\nWarning: package 'lubridate' was built under R version 4.2.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ lubridate 1.9.2     ✔ tibble    3.2.1\n✔ purrr     1.0.1     ✔ tidyr     1.3.0\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(datasets)\nlibrary(gapminder)\n\nWarning: package 'gapminder' was built under R version 4.2.3\n\nlibrary(skimr)   \n\nWarning: package 'skimr' was built under R version 4.2.3\n\nlibrary(scales)  \n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\nlibrary(ggthemes)  \n\nWarning: package 'ggthemes' was built under R version 4.2.3\n\nlibrary(hrbrthemes) \n\nWarning: package 'hrbrthemes' was built under R version 4.2.3\n\n\nNOTE: Either Arial Narrow or Roboto Condensed fonts are required to use these themes.\n      Please use hrbrthemes::import_roboto_condensed() to install Roboto Condensed and\n      if Arial Narrow is not on your system, please see https://bit.ly/arialnarrow\n\nlibrary(lubridate)\nlibrary(ggridges)\n\nWarning: package 'ggridges' was built under R version 4.2.3\n\nlibrary(DT)\n\nWarning: package 'DT' was built under R version 4.2.3\n\ntheme_set(theme_minimal()) \n\nknitr::opts_chunk$set(fig.width=8, fig.height=5,\n                      echo = T, eval = T, \n                      message=F, warning = F, fig.cap = \" \")"
  },
  {
    "objectID": "project.html#introduction",
    "href": "project.html#introduction",
    "title": "The Role of Basic and Advanced Statistics in NBA Contracts",
    "section": "Introduction",
    "text": "Introduction\nMy dataset consists of statistical in-game data, categorical data, and salary data for every NBA player to register playing time in the 2022-23 NBA Season. I wanted to use this data to examine what statistics, specifically successful teams, are most putting weight into when deciding the allocation of dollars when constructing a team. Are the most successful teams still following an old-school approach of valuing basic statistics such as PPG, 3P%, and Minutes Played? Has the new wave of advanced stats such as VORP, Win Shares, and TS% taken over? I aim to find the best budget players in the NBA and the most important aspects of building a championship-caliber team.\n-Link to my dataset: https://www.kaggle.com/datasets/jamiewelsh2/nba-player-salaries-2022-23-season\n\nnba_data&lt;-read_csv(\"nba_stats_salary.csv\")"
  },
  {
    "objectID": "project.html#salary-information",
    "href": "project.html#salary-information",
    "title": "The Role of Basic and Advanced Statistics in NBA Contracts",
    "section": "Salary Information",
    "text": "Salary Information\nFor context, the mean salary for an NBA player for the 2022-23 season was /$8,416,599. The salary cap for this season was /$123,655,000. The Larry Bird Exception in the CBA allows teams to go over the salary cap to resign their own players. Thus, the best teams are constructed through savvy drafting and trades. A team must be smart in how they utilize the money they give out to avoid the dreaded overpaid player. Typically, the best budget players are still on their rookie contracts, which last four years after they are drafted. From there, players are eligible for max and supermax contracts, which had a maximum value of $48 million for this season."
  },
  {
    "objectID": "project.html#statistics-i-looked-at",
    "href": "project.html#statistics-i-looked-at",
    "title": "The Role of Basic and Advanced Statistics in NBA Contracts",
    "section": "Statistics I looked at:",
    "text": "Statistics I looked at:\n-Points Per Game (PPG)\n-Assists Per Game (APG)\n-Rebounds Per Game (RPG)\n-Three Pointers Per Game\n-Total Minutes Played\n-Player Efficiency Rating (PER): (PTS + REB + AST + STL + BLK − Missed FG − Missed FT - TO) / GP.\n-True Shooting Percentage (TS%): half the points scored divided by the sum of the field goals attempted and 0.475 times the free throws attempted.\n-Usage Percentage (USG%) 100 times the sum of field goals attempted, a third of assists, turnovers and 0.44 times free throws attempted, all divided by the possessions -Win Shares (WS): dividing the sum of the player’s marginal point production by his team’s marginal points per win, provides a more holistic overlook than PER and better accounts for defense.\n-Box Plus-Minus (BPM): uses a player’s box score information, position, and the team’s overall performance to estimate the player’s contribution in points above league average per 100 possessions played (does not take into account minutes played)\n-Value Over Replacement Player (VORP): converts the BPM rate into an estimate of each player’s overall contribution to the team, measured vs. what a theoretical “replacement player” would provide, where the “replacement player” is defined as a player on minimum salary or not a normal member of a team’s rotation."
  },
  {
    "objectID": "project.html#observing-correlation-between-salary-and-these-statistics",
    "href": "project.html#observing-correlation-between-salary-and-these-statistics",
    "title": "The Role of Basic and Advanced Statistics in NBA Contracts",
    "section": "Observing Correlation Between Salary and These Statistics",
    "text": "Observing Correlation Between Salary and These Statistics\n\ncor(nba_data$Salary, nba_data$PTS)\n\n[1] 0.7275967\n\ncor(nba_data$Salary, nba_data$`Total Minutes`)\n\n[1] 0.5658969\n\ncor(nba_data$Salary, nba_data$TRB)\n\n[1] 0.5036332\n\ncor(nba_data$Salary, nba_data$AST)\n\n[1] 0.5939712\n\ncor(nba_data$Salary, nba_data$`3P`)\n\n[1] 0.4802388\n\ncor(nba_data$Salary, nba_data$VORP)\n\n[1] 0.680339\n\ncor(nba_data$Salary, nba_data$`TS%`, use='complete.obs')\n\n[1] 0.1601684\n\ncor(nba_data$Salary, nba_data$`USG%`)\n\n[1] 0.4880628\n\ncor(nba_data$Salary, nba_data$WS)\n\n[1] 0.6246638\n\ncor(nba_data$Salary, nba_data$BPM)\n\n[1] 0.3823459\n\ncor(nba_data$Salary, nba_data$PER)\n\n[1] 0.41179"
  },
  {
    "objectID": "project.html#plotting-relationship-between-vorp-and-ppg",
    "href": "project.html#plotting-relationship-between-vorp-and-ppg",
    "title": "The Role of Basic and Advanced Statistics in NBA Contracts",
    "section": "Plotting Relationship Between VORP and PPG",
    "text": "Plotting Relationship Between VORP and PPG\n\nggplot(nba_data, aes(x = PTS, y = VORP)) + \n  geom_point(aes(color = WS)) + \n  labs(x = \"Points Per Game (PPG)\",\n       y = \"Value Over Replacement Player (VORP)\", title = \"Relationship Between VORP and PPG\") +\n  stat_smooth(method = \"loess\", \n              formula = y ~ x, \n              geom = \"smooth\")\n\n\n\n\n\n\n\n\nAs you can see, VORP is heavily dependent on win shares and points per game. Win shares is a better indicator than PPG in my opinion as it takes into account defense and other elements of the game beyond just scoring. As shown by the line of best fit, both have a strong positive relationship with VORP."
  },
  {
    "objectID": "project.html#plotting-the-relationship-between-vorp-and-salary",
    "href": "project.html#plotting-the-relationship-between-vorp-and-salary",
    "title": "The Role of Basic and Advanced Statistics in NBA Contracts",
    "section": "Plotting the Relationship Between VORP and Salary",
    "text": "Plotting the Relationship Between VORP and Salary\n\nggplot(nba_data, aes(x = VORP, y = Salary)) + \n  geom_point(alpha = 0.4, color = \"red\") + \n  stat_smooth(method = \"lm\", \n              formula = y ~ x, \n              geom = \"smooth\") +\n  scale_y_comma() +\n  labs(x = \"Value Over Replacement Player (VORP)\",\n       y = \"Player Salary ($)\", title = \"Relationship Between Salary and VORP\")+\n  theme(axis.title.y = element_text(margin = margin(0, 10, 0, 0)))\n\n\n\n\n\n\n\n\nOverall, VORP is positively correlated with salary. However, there are some extreme outliers in this plot that I wanted to further examine and provide context for."
  },
  {
    "objectID": "project.html#creating-a-criteria-to-find-the-most-overpaidunderpaid-players",
    "href": "project.html#creating-a-criteria-to-find-the-most-overpaidunderpaid-players",
    "title": "The Role of Basic and Advanced Statistics in NBA Contracts",
    "section": "Creating a Criteria to Find the Most Overpaid/Underpaid Players",
    "text": "Creating a Criteria to Find the Most Overpaid/Underpaid Players\nI wanted to observe which players were outliers in my previous plot. To do this, I created two brand new variables and filtered a new dataset to eliminate small sample sizes that may skew the data. First, I created a dollar per point per game variable to determine which players provided the most/least scoring for how much they were paid. Then, I wanted only players that played a significant amount of games to avoid skewing the results, so I created a new dataset consisting of only players that played in 45+ games.\n\nnba_data$DollarPerPPG&lt;-(nba_data$Salary/nba_data$PTS)\nnba_data$DollarPerVORP&lt;-(nba_data$Salary/nba_data$VORP)\nnba_data_eligibleplayers&lt;-filter(nba_data, nba_data$GP&gt;45)"
  },
  {
    "objectID": "project.html#overpaid-players-in-2022-23",
    "href": "project.html#overpaid-players-in-2022-23",
    "title": "The Role of Basic and Advanced Statistics in NBA Contracts",
    "section": "Overpaid Players in 2022-23:",
    "text": "Overpaid Players in 2022-23:\nKevin Love (Cleveland Cavaliers/Miami Heat) $3,726,459.5 per Point Per Game $38,196,210 per 1 Value Over Replacement Player\nJoe Harris (Brooklyn Nets) $2,453,007.50 per Point Per Game $62,142,857 per 1 Value Over Replacement Player\nGordon Hayward (Charlotte Hornets) $2,045,918.4 per Point Per Game $150,375,000 per 1 Value Over Replacement Player"
  },
  {
    "objectID": "project.html#what-leads-to-overpaid-players",
    "href": "project.html#what-leads-to-overpaid-players",
    "title": "The Role of Basic and Advanced Statistics in NBA Contracts",
    "section": "What Leads to Overpaid Players?",
    "text": "What Leads to Overpaid Players?\n2 of the three players listed as examples in the previous slide were signed to max contracts while already in their late 20s, which is typically past the athletic prime for an NBA player. Harris also signed his lucrative deal in his late 20s. As a result, these players, by the time they reached the end of these massive deals, had clearly lost a step in their game due to a combination of both injuries and age. This led to teams paying costly “buyouts” in the case of Love and Hayward. The Nets, meanwhile, traded Harris following the season for a minimal return. While the basic stats do not look awful on the surface for these three players, their VORP shows their actual meaningful contributions to a team are minimal at best at this point. NBA teams finally recognized this only just recently with all three now playing bench roles at the end of the 2023-24 season."
  },
  {
    "objectID": "project.html#underpaid-players-in-2022-23",
    "href": "project.html#underpaid-players-in-2022-23",
    "title": "The Role of Basic and Advanced Statistics in NBA Contracts",
    "section": "Underpaid Players in 2022-23",
    "text": "Underpaid Players in 2022-23\nDesmond Bane (Memphis Grizzlies) $99,080.93 per Point Per Game $852,096.00 per 1 Value Over Replacement Player\nAustin Reaves (Los Angeles Lakers) $120,270.62 per Point Per Game $1.302,931.70 per 1 Value Over Replacement Player\nImmanuel Quickley (New York Knicks) $155,452.35 per Point Per Game $1,102,971.40 per 1 Value Over Replacement Player"
  },
  {
    "objectID": "project.html#what-leads-to-underpaid-players",
    "href": "project.html#what-leads-to-underpaid-players",
    "title": "The Role of Basic and Advanced Statistics in NBA Contracts",
    "section": "What Leads to Underpaid Players?",
    "text": "What Leads to Underpaid Players?\nNone of the players listed in the previous slide were lottery (top 14) selections in their respective drafts. Bane and Quickley were late first round selections, while Reaves was not even drafted. However, all three carved out crucial roles on playoff teams in the 2022-23 season. This shows the importance of looking beyond just the lottery stage to find talent for a competitive team. While lottery players will make upwards of $5 million on rookie contracts, late first round and undrafted talent make well under $2 million. Additionally, teams can have restricted free agent rights to retain this talent. Elite teams need great role players and to properly navigate the salary cap, a bulk of this talent needs to be scouted and drafted in the later stages of the draft."
  },
  {
    "objectID": "project.html#highlighting-these-players-on-the-graph",
    "href": "project.html#highlighting-these-players-on-the-graph",
    "title": "The Role of Basic and Advanced Statistics in NBA Contracts",
    "section": "Highlighting These Players on the Graph",
    "text": "Highlighting These Players on the Graph\n\nggplot(nba_data_eligibleplayers, aes(x = VORP, y = Salary)) + \n  geom_point(alpha = 0.4, color = \"chartreuse4\") + \n   geom_label_repel(filter(nba_data, `Player Name` == \"Desmond Bane\" | `Player Name` == \"Kevin Love\" | `Player Name` == \"Gordon Hayward\" | `Player Name` == \"Austin Reaves\" | `Player Name` == \"Immanuel Quickley\" | `Player Name` == \"Joe Harris\"), mapping = \n              aes(label = `Player Name`), min.segment.length = unit(0, 'lines'),\n                   nudge_y = 6) +\n  stat_smooth(method = \"lm\", \n              formula = y ~ x, \n              geom = \"smooth\") +\n  scale_y_comma() +\n  labs(x = \"Value Over Replacement Player (VORP)\",\n       y = \"Player Salary ($)\", title = \"Relationship Between Salary and VORP (Over 45 Games Played)\")+\n  theme(axis.title.y = element_text(margin = margin(0, 10, 0, 0)))"
  },
  {
    "objectID": "project.html#observing-a-successful-team",
    "href": "project.html#observing-a-successful-team",
    "title": "The Role of Basic and Advanced Statistics in NBA Contracts",
    "section": "Observing a Successful Team",
    "text": "Observing a Successful Team\nThe model showing the relationship between VORP and Salary show teams prioritize VORP, and to an extent Win Shares, when deciding how to spend their cap space on their roster. However, signing lucrative extensions can end up costing teams their championship window as players succumb to age and injury. The Boston Celtics, one of the league’s best teams in recent years, propose an interesting case study on how to successfully allocate salary.\n\nnba_data_celtics&lt;-filter(nba_data_eligibleplayers, Team == \"BOS\")\nmean(nba_data_eligibleplayers$VORP)\n\n[1] 0.8854093\n\nmean(nba_data_celtics$VORP)\n\n[1] 1.67\n\nmean(nba_data_eligibleplayers$Salary)\n\n[1] 11230766\n\nmean(nba_data_celtics$Salary)\n\n[1] 15389529\n\nmean(nba_data_eligibleplayers$WS)\n\n[1] 3.541637\n\nmean(nba_data_celtics$WS)\n\n[1] 5.04\n\nmean(nba_data_eligibleplayers$DollarPerVORP)\n\n[1] Inf\n\nmean(nba_data_celtics$DollarPerVORP)\n\n[1] 8581931\n\n\nWhile the Celtics spend, on average, more money per player than other NBA teams, they are much more effective in how they allocate that money. They spend it on players with higher win shares and are able to get more VORP per dollar from their players than league average. This gives insight into how the Celtics have been so successful for years."
  },
  {
    "objectID": "project.html#can-we-accurately-predict-future-salaries-with-just-vorp",
    "href": "project.html#can-we-accurately-predict-future-salaries-with-just-vorp",
    "title": "The Role of Basic and Advanced Statistics in NBA Contracts",
    "section": "Can We Accurately Predict Future Salaries with Just VORP?",
    "text": "Can We Accurately Predict Future Salaries with Just VORP?\nGiven how VORP is a collection of multiple player metrics and statistics, could it be an accurate predictor of future salaries? I observed three players who became free agents following the 2022-23 season and utilized to slope of the line of best fit for the Salary-VORP graph.\n-Donte DiVincenzo (GSW -&gt; NYK) 1.3 VORP, Predicted Salary: ≈ $12,500,000, Actual Salary: $11,717,500\n-Bruce Brown (DEN -&gt; IND) 0.9 VORP, Predicted Salary: ≈ $10,500,000, Actual Salary: $22,500,000\n-Austin Reaves (LAL) 1.2 VORP, Predicted Salary: ≈ $12,000,000, Actual Salary: $13,456,968"
  },
  {
    "objectID": "project.html#limitations-of-this-simple-model",
    "href": "project.html#limitations-of-this-simple-model",
    "title": "The Role of Basic and Advanced Statistics in NBA Contracts",
    "section": "Limitations of This Simple Model:",
    "text": "Limitations of This Simple Model:\nA Strict VORP Model Cannot Account for a Player’s Age, Intangibles, League Reputation, Salary Floor/Cap, Loyalty/Hometown Discounts, Supermax Contracts, Contract Length"
  },
  {
    "objectID": "project.html#conclusion",
    "href": "project.html#conclusion",
    "title": "The Role of Basic and Advanced Statistics in NBA Contracts",
    "section": "Conclusion",
    "text": "Conclusion\nEvidently, the new age of advanced statistics have taken their hold in the NBA. Statistics such as VORP and Win Shares are being heavily valued by successful NBA teams such as the Boston Celtics when attempting to construct their roster within budget contraints. Basic statistics cannot be completely dismissed but it is very evident advanced statistics are a better indictaor to avoid having overpaid players."
  },
  {
    "objectID": "project.html#works-cited",
    "href": "project.html#works-cited",
    "title": "The Role of Basic and Advanced Statistics in NBA Contracts",
    "section": "Works Cited:",
    "text": "Works Cited:\n-https://www.spotrac.com/nba\n-https://www.basketball-reference.com/about/glossary.html#:~:text=VORP%20%2D%20Value%20Over%20Replacement%20Player,to%20an%2082%2Dgame%20season\n-https://www.nba.com/players/free-agent-tracker/2023\n-https://theathletic.com/4660230/2023/07/02/nba-free-agency-2023-salary-cap-space/\n-https://hoopshype.com/2018/10/10/nba-bird-rights/"
  }
]